<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: A* | indeed]]></title>
  <link href="http://blog.thewatts.io/blog/categories/a-star/atom.xml" rel="self"/>
  <link href="http://blog.thewatts.io/"/>
  <updated>2014-01-31T16:47:48-07:00</updated>
  <id>http://blog.thewatts.io/</id>
  <author>
    <name><![CDATA[Nathaniel Watts]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Pathfinder: Ruby &amp; the a* Algorithm]]></title>
    <link href="http://blog.thewatts.io/blog/2014/01/14/pathfinder-ruby-and-the-a-star-algorithm/"/>
    <updated>2014-01-14T08:26:04-07:00</updated>
    <id>http://blog.thewatts.io/blog/2014/01/14/pathfinder-ruby-and-the-a-star-algorithm</id>
    <content type="html"><![CDATA[<blockquote><p>Please note, this series of posts is currently under development, as is the code to accompany them. If you have any questions or suggestions, please email them to watts[at]nathanielwatts.com</p></blockquote>

<p>I played a lot of video games growing up.</p>

<p>From the original 8-bit Sega Genesis to the more modern solutions of only few years ago,
I battled both the latest puzzles and bad guys &ndash; while simultaneously battling
my own addiction. I&rsquo;m thankful to say that in these recent years I&rsquo;ve gained some self control (to the joy
of my wife).</p>

<p>However, I can still remember many sleepless nights where I would oh so quietly sneak downstairs in hopes to conquer the next quest on Diablo 2&hellip; covering our old Pentium III machine with a thick blanket so that the dial up modem wouldn&rsquo;t wake my sleeping parents.</p>

<p>At the time I didn&rsquo;t program. I certainly wanted to &ndash; but to me programming was
moreso the things that you saw on television (you know, where some elite young
kid was typing 200 words per minute sans typos or spacebar usage).</p>

<p>Looking back now, as someone with more programming experience, it&rsquo;s incredible to think of the amount of work that went into
even the simplest of games.</p>

<h1>The Challenge</h1>

<p>As this school season is coming to a close &ndash; we&rsquo;ve been encouraged to work on
problems that are more difficult than hard. Problems that won&rsquo;t help us build
a website or create the next big widget &ndash; but problems that are a genuine
challenge to solve.</p>

<p>To support us in that challenge our lead instructor, <a href="http://twitter.com/j3">Jeff Casimir</a>, posted up some <a href="https://github.com/JumpstartLab/data_structures_and_algorithms">data structures and algorithms problems</a> for us to take a shot at.</p>

<p><em>Here&rsquo;s where the videogames come in.</em></p>

<p>Among the listings of challenges was one called <a href="https://github.com/JumpstartLab/data_structures_and_algorithms/tree/master/a_star"><em>The A* Search
Algorithm</em></a>.</p>

<p>It&rsquo;s algorithms such as A* that made possible my many many hours spent
in my college dorm playing Starcraft.</p>

<p>But what does it do? In a really small nutshell &ndash; it can be used to calculate the path your
character should travel when you&rsquo;re at point A and you want to go to point B &ndash; and
there&rsquo;s junk in the way.</p>

<h1>The Goal</h1>

<p>I want to document my process of reproducing this algorithm with Ruby in a series of
blog posts.</p>

<p>My solutions likely won&rsquo;t be perfect, but I&rsquo;m not concerned about perfection
right now &ndash; I just want to make the thing work. Once that&rsquo;s delivered, we can
evaluate and refactor. But you can&rsquo;t do the latter without the former.</p>

<p><em>Why Ruby?</em> &ndash; Because that&rsquo;s what I&rsquo;ve been learning for the past four and a half
months at a place called <a href="http://gschool.it">gSchool</a>, and I like it.</p>

<p><em>Tests?</em> &ndash; You betcha.</p>

<p>&hellip;</p>

<p><em>So what now?</em></p>

<p>Stay tuned for the next post! I&rsquo;ll be going more in depth about the A*
search algorithm as a whole, and then we&rsquo;ll jump into the code!</p>
]]></content>
  </entry>
  
</feed>
